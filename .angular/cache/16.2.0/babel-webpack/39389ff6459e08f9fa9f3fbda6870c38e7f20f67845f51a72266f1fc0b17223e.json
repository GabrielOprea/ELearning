{"ast":null,"code":"var _class;\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst NAV_URL = environment.apiURL;\nexport class UserService {\n  constructor(_http) {\n    this._http = _http;\n  }\n  getAllUsers() {\n    return this._http.get(`${NAV_URL}/userlist`);\n  }\n  getYoutubeCourseList() {\n    return this._http.get(`${NAV_URL}/youtubecourselist`);\n  }\n  getWebsiteCourseList() {\n    return this._http.get(`${NAV_URL}/websitecourselist`);\n  }\n  getCourseListByName(coursename) {\n    return this._http.get(`${NAV_URL}/courselistbyname/` + coursename);\n  }\n  enrollNewCourse(enrollment, loggedUser, currRole) {\n    return this._http.post(`${NAV_URL}/enrollnewcourse/` + loggedUser + \"/\" + currRole, enrollment);\n  }\n  addToWishlist(wishlist) {\n    return this._http.post(`${NAV_URL}/addtowishlist`, wishlist);\n  }\n  getEnrollmentStatus(coursename, loggedUser, currRole) {\n    return this._http.get(`${NAV_URL}/getenrollmentstatus/` + coursename + \"/\" + loggedUser + \"/\" + currRole);\n  }\n  getEnrollmentByEmail(loggedUser, currRole) {\n    return this._http.get(`${NAV_URL}/getenrollmentbyemail/` + loggedUser + \"/\" + currRole);\n  }\n  getWishlistStatus(coursename, loggedUser) {\n    return this._http.get(`${NAV_URL}/getwishliststatus/` + coursename + \"/\" + loggedUser);\n  }\n  getWishlistByEmail(loggedUser) {\n    return this._http.get(`${NAV_URL}/getwishlistbyemail/` + loggedUser);\n  }\n  getAllWishlist() {\n    return this._http.get(`${NAV_URL}/getallwishlist`);\n  }\n  getChappterListByCourseName(coursename) {\n    return this._http.get(`${NAV_URL}/getchapterlistbycoursename/` + coursename);\n  }\n  getProfileDetails(loggedUser) {\n    return this._http.get(`${NAV_URL}/userprofileDetails/` + loggedUser);\n  }\n  UpdateUserProfile(user) {\n    return this._http.put(`${NAV_URL}/updateuser`, user);\n  }\n}\n_class = UserService;\n_class.ɵfac = function UserService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","NAV_URL","apiURL","UserService","constructor","_http","getAllUsers","get","getYoutubeCourseList","getWebsiteCourseList","getCourseListByName","coursename","enrollNewCourse","enrollment","loggedUser","currRole","post","addToWishlist","wishlist","getEnrollmentStatus","getEnrollmentByEmail","getWishlistStatus","getWishlistByEmail","getAllWishlist","getChappterListByCourseName","getProfileDetails","UpdateUserProfile","user","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\ElearningManagementSystem-main\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Course } from '../models/course';\nimport { Enrollment } from '../models/enrollment';\nimport { Wishlist } from '../models/wishlist';\n\nconst NAV_URL = environment.apiURL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private _http : HttpClient) { }\n\n  getAllUsers() : Observable<any>\n  {\n    return this._http.get<any>(`${NAV_URL}/userlist`);\n  }\n\n  getYoutubeCourseList() : Observable<any>\n  {\n    return this._http.get<any>(`${NAV_URL}/youtubecourselist`);\n  }\n\n  getWebsiteCourseList() : Observable<any>\n  {\n    return this._http.get<any>(`${NAV_URL}/websitecourselist`);\n  }\n\n  getCourseListByName(coursename : string) : Observable<any>\n  {\n    return this._http.get<any>(`${NAV_URL}/courselistbyname/`+coursename);\n  }\n\n  enrollNewCourse(enrollment : Enrollment, loggedUser : string, currRole : string) : Observable<any>\n  {\n    return this._http.post<any>(`${NAV_URL}/enrollnewcourse/`+loggedUser+\"/\"+currRole,enrollment);\n  }\n\n  addToWishlist(wishlist : Wishlist) : Observable<any>\n  {\n    return this._http.post<any>(`${NAV_URL}/addtowishlist`,wishlist);\n  }\n\n  getEnrollmentStatus(coursename : string, loggedUser : string, currRole : string) : Observable<any>\n  {\n    return this._http.get<any>(`${NAV_URL}/getenrollmentstatus/`+coursename+\"/\"+loggedUser+\"/\"+currRole);\n  }\n\n  getEnrollmentByEmail(loggedUser : string, currRole : string) : Observable<any>\n  {\n    return this._http.get<any>(`${NAV_URL}/getenrollmentbyemail/`+loggedUser+\"/\"+currRole);\n  }\n\n  getWishlistStatus(coursename : string, loggedUser : string) : Observable<any>\n  {\n    return this._http.get<any>(`${NAV_URL}/getwishliststatus/`+coursename+\"/\"+loggedUser);\n  }\n\n  getWishlistByEmail(loggedUser : string) : Observable<any>\n  {\n    return this._http.get<any>(`${NAV_URL}/getwishlistbyemail/`+loggedUser);\n  }\n\n  getAllWishlist() : Observable<any>\n  {\n    return this._http.get<any>(`${NAV_URL}/getallwishlist`);\n  }\n\n  getChappterListByCourseName(coursename : string) : Observable<any>\n  {\n    return this._http.get<any>(`${NAV_URL}/getchapterlistbycoursename/`+coursename);\n  }\n\n  getProfileDetails(loggedUser : string) : Observable<any>\n  {\n    return this._http.get(`${NAV_URL}/userprofileDetails/`+loggedUser);\n  }\n  \n  UpdateUserProfile(user : any):Observable<any>\n  {\n    return this._http.put<any>(`${NAV_URL}/updateuser`,user);\n  }\n\n}\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,MAAMC,OAAO,GAAGD,WAAW,CAACE,MAAM;AAKlC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,KAAkB;IAAlB,KAAAA,KAAK,GAALA,KAAK;EAAiB;EAE1CC,WAAWA,CAAA;IAET,OAAO,IAAI,CAACD,KAAK,CAACE,GAAG,CAAM,GAAGN,OAAO,WAAW,CAAC;EACnD;EAEAO,oBAAoBA,CAAA;IAElB,OAAO,IAAI,CAACH,KAAK,CAACE,GAAG,CAAM,GAAGN,OAAO,oBAAoB,CAAC;EAC5D;EAEAQ,oBAAoBA,CAAA;IAElB,OAAO,IAAI,CAACJ,KAAK,CAACE,GAAG,CAAM,GAAGN,OAAO,oBAAoB,CAAC;EAC5D;EAEAS,mBAAmBA,CAACC,UAAmB;IAErC,OAAO,IAAI,CAACN,KAAK,CAACE,GAAG,CAAM,GAAGN,OAAO,oBAAoB,GAACU,UAAU,CAAC;EACvE;EAEAC,eAAeA,CAACC,UAAuB,EAAEC,UAAmB,EAAEC,QAAiB;IAE7E,OAAO,IAAI,CAACV,KAAK,CAACW,IAAI,CAAM,GAAGf,OAAO,mBAAmB,GAACa,UAAU,GAAC,GAAG,GAACC,QAAQ,EAACF,UAAU,CAAC;EAC/F;EAEAI,aAAaA,CAACC,QAAmB;IAE/B,OAAO,IAAI,CAACb,KAAK,CAACW,IAAI,CAAM,GAAGf,OAAO,gBAAgB,EAACiB,QAAQ,CAAC;EAClE;EAEAC,mBAAmBA,CAACR,UAAmB,EAAEG,UAAmB,EAAEC,QAAiB;IAE7E,OAAO,IAAI,CAACV,KAAK,CAACE,GAAG,CAAM,GAAGN,OAAO,uBAAuB,GAACU,UAAU,GAAC,GAAG,GAACG,UAAU,GAAC,GAAG,GAACC,QAAQ,CAAC;EACtG;EAEAK,oBAAoBA,CAACN,UAAmB,EAAEC,QAAiB;IAEzD,OAAO,IAAI,CAACV,KAAK,CAACE,GAAG,CAAM,GAAGN,OAAO,wBAAwB,GAACa,UAAU,GAAC,GAAG,GAACC,QAAQ,CAAC;EACxF;EAEAM,iBAAiBA,CAACV,UAAmB,EAAEG,UAAmB;IAExD,OAAO,IAAI,CAACT,KAAK,CAACE,GAAG,CAAM,GAAGN,OAAO,qBAAqB,GAACU,UAAU,GAAC,GAAG,GAACG,UAAU,CAAC;EACvF;EAEAQ,kBAAkBA,CAACR,UAAmB;IAEpC,OAAO,IAAI,CAACT,KAAK,CAACE,GAAG,CAAM,GAAGN,OAAO,sBAAsB,GAACa,UAAU,CAAC;EACzE;EAEAS,cAAcA,CAAA;IAEZ,OAAO,IAAI,CAAClB,KAAK,CAACE,GAAG,CAAM,GAAGN,OAAO,iBAAiB,CAAC;EACzD;EAEAuB,2BAA2BA,CAACb,UAAmB;IAE7C,OAAO,IAAI,CAACN,KAAK,CAACE,GAAG,CAAM,GAAGN,OAAO,8BAA8B,GAACU,UAAU,CAAC;EACjF;EAEAc,iBAAiBA,CAACX,UAAmB;IAEnC,OAAO,IAAI,CAACT,KAAK,CAACE,GAAG,CAAC,GAAGN,OAAO,sBAAsB,GAACa,UAAU,CAAC;EACpE;EAEAY,iBAAiBA,CAACC,IAAU;IAE1B,OAAO,IAAI,CAACtB,KAAK,CAACuB,GAAG,CAAM,GAAG3B,OAAO,aAAa,EAAC0B,IAAI,CAAC;EAC1D;;SAxEWxB,WAAW;;mBAAXA,MAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAX7B,MAAW;EAAA8B,OAAA,EAAX9B,MAAW,CAAA+B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}