{"ast":null,"code":"var _class;\nimport { Professor } from '../models/professor';\nimport { User } from '../models/user';\nimport { map } from \"rxjs/operators\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst NAV_URL = environment.apiURL;\nexport class LoginService {\n  constructor(_http) {\n    this._http = _http;\n    this.user = new User();\n    this.professor = new Professor();\n  }\n  loginUserFromRemote(user) {\n    return this._http.post(`${NAV_URL}/loginuser`, user).pipe(map(data => {\n      sessionStorage.setItem('USER', user.email);\n      sessionStorage.setItem('ROLE', 'USER');\n      sessionStorage.setItem('TOKEN', `Bearer ${data.token}`);\n      return data;\n    }));\n  }\n  loginProfessorFromRemote(professor) {\n    console.log(professor);\n    return this._http.post(`${NAV_URL}/loginprofessor`, professor).pipe(map(data => {\n      sessionStorage.setItem('USER', professor.email);\n      sessionStorage.setItem('ROLE', 'PROFESSOR');\n      sessionStorage.setItem('TOKEN', `Bearer ${data.token}`);\n      return data;\n    }));\n  }\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('USER');\n    if (user === null || user.length === 0) {\n      return false;\n    }\n    return true;\n  }\n  isProfessorLoggedIn() {\n    let user = sessionStorage.getItem('USER');\n    if (user === null || user.length === 0) {\n      return false;\n    }\n    return true;\n  }\n  isAdminLoggedIn() {\n    let user = sessionStorage.getItem('USER');\n    if (user === null || user.length === 0) {\n      return false;\n    }\n    return true;\n  }\n  getAuthenticatedToken() {\n    return sessionStorage.getItem('TOKEN');\n  }\n  getAuthenticatedUser() {\n    return sessionStorage.getItem('USER');\n  }\n  userType() {\n    return sessionStorage.getItem('ROLE');\n  }\n  adminLoginFromRemote(email, password) {\n    if (email === 'admin@gmail.com' && password === 'admin123') {\n      sessionStorage.setItem('user', email);\n      sessionStorage.setItem('ROLE', \"admin\");\n      return true;\n    }\n    return false;\n  }\n}\n_class = LoginService;\n_class.ɵfac = function LoginService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Professor","User","map","environment","NAV_URL","apiURL","LoginService","constructor","_http","user","professor","loginUserFromRemote","post","pipe","data","sessionStorage","setItem","email","token","loginProfessorFromRemote","console","log","isUserLoggedIn","getItem","length","isProfessorLoggedIn","isAdminLoggedIn","getAuthenticatedToken","getAuthenticatedUser","userType","adminLoginFromRemote","password","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\ElearningManagementSystem-main\\src\\app\\services\\login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Professor } from '../models/professor';\nimport { User } from '../models/user';\nimport { map } from \"rxjs/operators\";\nimport { environment } from 'src/environments/environment';\n\nconst NAV_URL = environment.apiURL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  user = new User();\n  professor = new Professor();\n\n  constructor(private _http : HttpClient) { }\n  \n  public loginUserFromRemote(user : User)\n  {\n  return this._http.post<any>(`${NAV_URL}/loginuser`,user).pipe(\n    map(\n      data => {\n        sessionStorage.setItem('USER', user.email);\n        sessionStorage.setItem('ROLE', 'USER');\n        sessionStorage.setItem('TOKEN', `Bearer ${data.token}`);\n        return data;\n        }\n      )\n    );        \n  }\n\n  public loginProfessorFromRemote(professor : Professor)\n  {\n    console.log(professor);\n    return this._http.post<any>(`${NAV_URL}/loginprofessor`,professor).pipe(\n    map(\n      data => {\n        sessionStorage.setItem('USER', professor.email);\n        sessionStorage.setItem('ROLE', 'PROFESSOR');\n        sessionStorage.setItem('TOKEN', `Bearer ${data.token}`);\n        return data;\n        }\n      )\n    ); \n  }\n\nisUserLoggedIn()\n{\n  let user = sessionStorage.getItem('USER');\n  if(user === null || user.length === 0) \n  {\n      return false;\n  }\n  return true;\n}\n\nisProfessorLoggedIn()\n{\n  let user = sessionStorage.getItem('USER');\n  if(user === null || user.length === 0) \n  {\n      return false;\n  }\n  return true;\n}\n\nisAdminLoggedIn()\n{\n  let user = sessionStorage.getItem('USER');\n  if(user === null || user.length === 0) \n  {\n      return false;\n  }\n  return true;\n}\n\ngetAuthenticatedToken() {\n  return sessionStorage.getItem('TOKEN');\n}\n\ngetAuthenticatedUser() {\n  return sessionStorage.getItem('USER');\n}\n\nuserType() {\n    return sessionStorage.getItem('ROLE');\n}\n\npublic adminLoginFromRemote(email: string, password: string)\n{\n  if(email === 'admin@gmail.com' && password === 'admin123') \n  {\n    sessionStorage.setItem('user', email);\n    sessionStorage.setItem('ROLE', \"admin\");\n    return true;\n  }\n  return false;\n}\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}